// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saipulmuiz/mnc-test-tahap2/repositories (interfaces: TopupRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/saipulmuiz/mnc-test-tahap2/models"
	gorm "gorm.io/gorm"
)

// MockTopupRepo is a mock of TopupRepo interface.
type MockTopupRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTopupRepoMockRecorder
}

// MockTopupRepoMockRecorder is the mock recorder for MockTopupRepo.
type MockTopupRepoMockRecorder struct {
	mock *MockTopupRepo
}

// NewMockTopupRepo creates a new mock instance.
func NewMockTopupRepo(ctrl *gomock.Controller) *MockTopupRepo {
	mock := &MockTopupRepo{ctrl: ctrl}
	mock.recorder = &MockTopupRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTopupRepo) EXPECT() *MockTopupRepoMockRecorder {
	return m.recorder
}

// Topup mocks base method.
func (m *MockTopupRepo) Topup(arg0 *gorm.DB, arg1 *models.Topup) (*models.Topup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Topup", arg0, arg1)
	ret0, _ := ret[0].(*models.Topup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Topup indicates an expected call of Topup.
func (mr *MockTopupRepoMockRecorder) Topup(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Topup", reflect.TypeOf((*MockTopupRepo)(nil).Topup), arg0, arg1)
}
