// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saipulmuiz/mnc-test-tahap2/repositories (interfaces: TransferRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/saipulmuiz/mnc-test-tahap2/models"
	gorm "gorm.io/gorm"
)

// MockTransferRepo is a mock of TransferRepo interface.
type MockTransferRepo struct {
	ctrl     *gomock.Controller
	recorder *MockTransferRepoMockRecorder
}

// MockTransferRepoMockRecorder is the mock recorder for MockTransferRepo.
type MockTransferRepoMockRecorder struct {
	mock *MockTransferRepo
}

// NewMockTransferRepo creates a new mock instance.
func NewMockTransferRepo(ctrl *gomock.Controller) *MockTransferRepo {
	mock := &MockTransferRepo{ctrl: ctrl}
	mock.recorder = &MockTransferRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransferRepo) EXPECT() *MockTransferRepoMockRecorder {
	return m.recorder
}

// Transfer mocks base method.
func (m *MockTransferRepo) Transfer(arg0 *gorm.DB, arg1 *models.Transfer) (*models.Transfer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0, arg1)
	ret0, _ := ret[0].(*models.Transfer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transfer indicates an expected call of Transfer.
func (mr *MockTransferRepoMockRecorder) Transfer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockTransferRepo)(nil).Transfer), arg0, arg1)
}
