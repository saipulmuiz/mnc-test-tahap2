// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saipulmuiz/mnc-test-tahap2/repositories (interfaces: CartRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/saipulmuiz/mnc-test-tahap2/models"
	gorm "gorm.io/gorm"
)

// MockCartRepo is a mock of CartRepo interface.
type MockCartRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCartRepoMockRecorder
}

// MockCartRepoMockRecorder is the mock recorder for MockCartRepo.
type MockCartRepoMockRecorder struct {
	mock *MockCartRepo
}

// NewMockCartRepo creates a new mock instance.
func NewMockCartRepo(ctrl *gomock.Controller) *MockCartRepo {
	mock := &MockCartRepo{ctrl: ctrl}
	mock.recorder = &MockCartRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCartRepo) EXPECT() *MockCartRepoMockRecorder {
	return m.recorder
}

// AddToCart mocks base method.
func (m *MockCartRepo) AddToCart(arg0 *models.Cart) (*models.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToCart", arg0)
	ret0, _ := ret[0].(*models.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddToCart indicates an expected call of AddToCart.
func (mr *MockCartRepoMockRecorder) AddToCart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToCart", reflect.TypeOf((*MockCartRepo)(nil).AddToCart), arg0)
}

// CheckCartByID mocks base method.
func (m *MockCartRepo) CheckCartByID(arg0 int, arg1 *models.Cart) (*models.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckCartByID", arg0, arg1)
	ret0, _ := ret[0].(*models.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckCartByID indicates an expected call of CheckCartByID.
func (mr *MockCartRepoMockRecorder) CheckCartByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckCartByID", reflect.TypeOf((*MockCartRepo)(nil).CheckCartByID), arg0, arg1)
}

// ClearCart mocks base method.
func (m *MockCartRepo) ClearCart(arg0 *gorm.DB, arg1 int, arg2 []int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearCart", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClearCart indicates an expected call of ClearCart.
func (mr *MockCartRepoMockRecorder) ClearCart(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearCart", reflect.TypeOf((*MockCartRepo)(nil).ClearCart), arg0, arg1, arg2)
}

// DeleteCart mocks base method.
func (m *MockCartRepo) DeleteCart(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCart", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCart indicates an expected call of DeleteCart.
func (mr *MockCartRepoMockRecorder) DeleteCart(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCart", reflect.TypeOf((*MockCartRepo)(nil).DeleteCart), arg0)
}

// GetCartByCartIds mocks base method.
func (m *MockCartRepo) GetCartByCartIds(arg0 int, arg1 []int) ([]models.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCartByCartIds", arg0, arg1)
	ret0, _ := ret[0].([]models.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCartByCartIds indicates an expected call of GetCartByCartIds.
func (mr *MockCartRepoMockRecorder) GetCartByCartIds(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCartByCartIds", reflect.TypeOf((*MockCartRepo)(nil).GetCartByCartIds), arg0, arg1)
}

// GetCarts mocks base method.
func (m *MockCartRepo) GetCarts(arg0, arg1, arg2 int) (*[]models.Cart, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCarts", arg0, arg1, arg2)
	ret0, _ := ret[0].(*[]models.Cart)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetCarts indicates an expected call of GetCarts.
func (mr *MockCartRepoMockRecorder) GetCarts(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCarts", reflect.TypeOf((*MockCartRepo)(nil).GetCarts), arg0, arg1, arg2)
}

// UpdateCart mocks base method.
func (m *MockCartRepo) UpdateCart(arg0 int, arg1 *models.Cart) (*models.Cart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateCart", arg0, arg1)
	ret0, _ := ret[0].(*models.Cart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateCart indicates an expected call of UpdateCart.
func (mr *MockCartRepoMockRecorder) UpdateCart(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCart", reflect.TypeOf((*MockCartRepo)(nil).UpdateCart), arg0, arg1)
}
