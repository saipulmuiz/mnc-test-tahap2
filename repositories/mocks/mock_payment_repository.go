// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saipulmuiz/mnc-test-tahap2/repositories (interfaces: PaymentRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/saipulmuiz/mnc-test-tahap2/models"
	gorm "gorm.io/gorm"
)

// MockPaymentRepo is a mock of PaymentRepo interface.
type MockPaymentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentRepoMockRecorder
}

// MockPaymentRepoMockRecorder is the mock recorder for MockPaymentRepo.
type MockPaymentRepoMockRecorder struct {
	mock *MockPaymentRepo
}

// NewMockPaymentRepo creates a new mock instance.
func NewMockPaymentRepo(ctrl *gomock.Controller) *MockPaymentRepo {
	mock := &MockPaymentRepo{ctrl: ctrl}
	mock.recorder = &MockPaymentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentRepo) EXPECT() *MockPaymentRepoMockRecorder {
	return m.recorder
}

// Payment mocks base method.
func (m *MockPaymentRepo) Payment(arg0 *gorm.DB, arg1 *models.Payment) (*models.Payment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payment", arg0, arg1)
	ret0, _ := ret[0].(*models.Payment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Payment indicates an expected call of Payment.
func (mr *MockPaymentRepoMockRecorder) Payment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payment", reflect.TypeOf((*MockPaymentRepo)(nil).Payment), arg0, arg1)
}
